<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <AssemblyName>SharpLab.WebApp</AssemblyName>
    <RootNamespace>SharpLab.WebApp</RootNamespace>
  </PropertyGroup>

  <ItemGroup>
    <Folder Include="wwwroot/" />
    <Content Remove="**/*.json" />
    <None Include="**/*.json" Exclude="$(DefaultItemExcludes);$(DefaultExcludesInProjectFolder);wwwroot/**" />
  </ItemGroup>

  <ItemGroup>
    <None Update=".env">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Server\Server.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Autofac.Extensions.DependencyInjection" Version="5.0.0" />
  </ItemGroup>

  <ItemGroup>
    <_StaticOutputs Include="wwwroot\**\*.*" Exclude="wwwroot\!branches.json" />
    <_StaticInputs Include="@(None)" Exclude="**\!*.*; @(_StaticOutputs)" />
  </ItemGroup>
  <ItemGroup Condition="'@(_StaticOutputs)' == ''">
    <_StaticOutputs Include="$(wwwroot)\.any" />
  </ItemGroup>

  <Target Name="CopyFrameworkXmlDocumentation" AfterTargets="ResolveReferences">
    <ItemGroup>
      <Content Include="@(Reference->'%(RootDir)%(Directory)%(Filename).xml')"
               Link="@(Reference->'xmldocs\%(Filename).xml')"
               Condition="$([System.String]::new('%(Filename)').StartsWith('System.')) and Exists('%(RootDir)%(Directory)%(Filename).xml')">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
    </ItemGroup>
  </Target>
</Project>
